/**
 * 设置属性
 *
 * @param {string} $property-name                          属性名
 * @param {any} $property-value                            属性值
 * @param {any} $property-default-value                    属性默认值
 * @param {boolean} $is-strict                             是否严格模式
 */
@mixin set-property($property-name, $property-value, $property-default-value: null, $is-strict: false) {
  @if ($property-name) {
    @if ($is-strict) {
      @if ($property-value) {
        #{$property-name}: $property-value;
      } @else if (not $property-value and $property-default-value) {
        #{$property-name}: $property-default-value;
      }
    } @else {
      @if ($property-value and $property-value != true) {
        #{$property-name}: $property-value;
      } @else if ($property-value == true and $property-default-value) {
        #{$property-name}: $property-default-value;
      } @else if (not $property-value and $property-default-value) {
        #{$property-name}: $property-default-value;
      }
    }
  }
}

/**
 * 根据集合设置属性
 *
 * @param {map} $map                                       属性集合
 * @param {map | null} $default-map                        属性默认值集合
 * @param {boolean} $is-strict                             是否严格模式
 */
@mixin set-property-by-each-map($map: (), $default-map: null, $is-strict: false) {
  @if (type-of($map) == map) {
    @if ($is-strict) {
      @each $key, $value in $map {
        @if ($value and $value != true) {
          #{$key}: $value;
        } @else if (not $value and map-has-key($default-map, $key)) {
          #{$key}: map-get($default-map, $key);
        } @else if ($value == true and map-has-key($default-map, $key)) {
          #{$key}: map-get($default-map, $key);
        }
      }
    } @else {
      @each $key, $value in $map {
        @if ($value) {
          #{$key}: $value;
        } @else if (not $value and map-has-key($default-map, $key)) {
          #{$key}: map-get($default-map, $key);
        }
      }
    }
  }
}

/**
 * 根据列表设置属性
 *
 * @param {string} $real-key                               真实属性名
 * @param {list} $keys-list                                属性名列表
 * @param {map} $keys-map                                  属性集合
 * @param {string} $short-key                              简写属性名
 */
@mixin set-property-by-list($real-property-name, $properties-name-list: (), $properties-map: (), $short-property-name: null) {
  @if ($real-property-name and type-of($properties-map) == map and map-has-key($properties-map, $real-property-name)) {
    @if ($short-property-name) {
      @if ((index($properties-name-list, $real-property-name) != null)) {
        #{$real-property-name}: map-get($properties-map, $real-property-name);
      } @else if ((index($properties-name-list, $short-property-name) != null)) {
        #{$real-property-name}: map-get($properties-map, $real-property-name);
      } @else if ($real-property-name == $properties-name-list) {
        #{$real-property-name}: map-get($properties-map, $real-property-name);
      }
    } @else {
      @if (index($properties-name-list, $real-property-name) != null) {
        #{$real-property-name}: map-get($properties-map, $real-property-name);
      } @else if ($real-property-name == $properties-name-list) {
        #{$real-property-name}: map-get($properties-map, $real-property-name);
      }
    }
  }
}

/**
 * 设置单个属性
 *
 * @param {string} $property-name                          属性名
 * @param {any} $property-value                            属性值
 * @param {any} $property-default-value                    属性默认值
 * @param {boolean} $is-strict                             是否严格模式
 */
@mixin mixin-property($property-name, $property-value, $property-default-value: null, $is-strict: false) {
  @include set-property($property-name, $property-value, $property-default-value, $is-strict);
}

/**
 * 根据属性集合设置所有属性
 *
 * @param {map} $properties-map                            属性集合
 * @param {map} $properties-default-map                    属性默认值集合
 * @param {boolean} $is-strict                             是否严格模式
 */
@mixin mixin-properties-map($properties-map, $properties-default-map: null, $is-strict: false) {
  @if (type-of($properties-map) == map) {
    @if (type-of($properties-default-map) == map and $is-strict) {
      @include set-property-by-each-map($properties-map, $properties-default-map, $is-strict);
    } @else {
      @include set-property-by-each-map($properties-map);
    }
  }
}

/**
 * 根据 属性名集合 设置属性
 *
 * @param {map | list} $properties-key-map               属性名集合( 简写属性名: 真实属性名 )
 * @param {list} $properties-list                        简写属性名列表
 * @param {map} $properties-map                          属性集合
 */
@mixin mixin-properties-list($properties-key, $properties-list, $properties-map) {
  @if (type-of($properties-key) == list) {
    @each $real-key in $properties-key {
      @if (index($properties-list, $real-key) != null and map-has-key($properties-map, $real-key)) {
        @include set-property-by-list($real-key, $properties-list, $properties-map);
      }
    }
  } @else if (type-of($properties-key) == map) {
    @each $short-key, $real-key in $properties-key {
      @if (index($properties-list, $real-key) != null and map-has-key($properties-map, $real-key)) {
        @include set-property-by-list($real-key, $properties-list, $properties-map, $real-key);
      } @else if (index($properties-list, $short-key) != null and map-has-key($properties-map, $real-key)) {
        @include set-property-by-list($real-key, $properties-list, $properties-map, $short-key);
      }
    }
  }
}

/**
 * 获取第一个参数不是 集合 或 列表 的所有参数
 *
 * ((),1,2,3) => (1,2,3)
 * ((foo:bar),1,2,3) => (1,2,3)
 * (1,2,3) => (1,2,3)
 */
@function get-real-params($args...) {
  $first-param: nth($args, 1);
  //@debug type-of($first-param);
  @if (type-of($first-param) == map or type-of($first-param) == list) {
    $real-params: ();
    @each $param in $args {
      @if ($param != $first-param) {
        $real-params: append($real-params, $param);
      }
    }
    @return $real-params;
  } @else {
    @return $args;
  }
}
