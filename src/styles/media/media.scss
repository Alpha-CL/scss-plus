$media-default-device: screen !default;

$media-query-breakpoints: (
        'micro': 320px,
        'mini': 480px,
        'small': 768px,
        'medium': 960px,
        'large': 1440px,
        'huge': 2560px,
        'giant': 5120px
) !default;

$media-device-query: (
        'pc': '(min-width: #{getMediaBreakPoint('small')})',
        'mobile': '(max-width: #{getMediaBreakPoint('small')})',
) !default;


@function getMediaBreakPoint($breakpoint-name, $breakpoints-map: $media-query-breakpoints) {
  @if (map-has-key($breakpoints-map, $breakpoint-name)) {
    @return map-get($breakpoints-map, $breakpoint-name);
  } @else {
    @return null;
  }
}

@function getMediaQueryConditions($query-name, $devices-map: $media-device-query) {
  @if (map-has-key($devices-map, $query-name)) {
    @return map-get($devices-map, $query-name);
  } @else {
    @return null;
  }
}

@function createMedia($media-query-conditions, $media-device: $media-default-device) {
  @if ($media-query-conditions) {
    @return '#{$media-device} and #{$media-query-conditions}';
  } @else {
    @return null;
  }
}

$media-query-pc: createMedia(#{getMediaQueryConditions('pc')});
$media-query-mobile: createMedia(#{getMediaQueryConditions('mobile')});

.media-demo {
  @media #{$media-query-pc} {
    background-color: red;
  }
  @media #{$media-query-mobile} {
    background-color: blue;
  }
}

@mixin media-client-by-query-name($query-name, $mixin-name) {
  $media-query: createMedia(#{getMediaQueryConditions($query-name)});
  @if ($media-query) {
    @media #{$media-query} {
      @extend #{$mixin-name};
    }
  } @else {
    @extend #{$mixin-name};
  }
}

@mixin media-pc-and-mobile($pc, $mobile) {

  @include media-client-by-query-name(pc, $pc);
  @include media-client-by-query-name(mobile, $mobile);

  //@media #{$media-query-pc} {
  //  @extend #{pc};
  //}
  //@media #{$media-query-mobile} {
  //  @extend #{$mobile};
  //}
}


